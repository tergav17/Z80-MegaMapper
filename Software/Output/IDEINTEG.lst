              	; --------------------------------------
              	; zasm: assemble "IDEINTEG.asm"
              	; date: 2024-08-08 00:54:16
              	; --------------------------------------


              	;
              	;**************************************************************
              	;*
              	;*      I D E   I N T E R F A C E   I N T E G R I T Y   T E S T
              	;*
              	;*      Checks the integrity of NABU IDE interface in repeatedly
              	;*      reading the first 256 blocks of memory.
              	;*
              	;*      Program will continue to run until machine is reset
              	;* 
              	;**************************************************************
              	
              	; Equates
0005:         	bdos	equ	0x0005
              	
0000:         	b_exit	equ	0x00
0001:         	b_coin	equ	0x01
0002:         	b_cout	equ	0x02
0009:         	b_print	equ	0x09
              	
00C0:         	id_base	equ	0xC0
              	
              	; Program start
0100:         		org	0x0100
              		
              		; Print "hello" splash
0100: F3      	start:	di
0101: 0E09    		ld	c,b_print
0103: 115902  		ld	de,splash
0106: CD0500  		call	bdos
              		
              		; Select IDE drive
0109: 3EE0    		ld	a,0xE0
010B: D3CC    		out	(id_base+0xC),a
010D: 060A    		ld	b,10
010F: CDE701  		call	id_stal
0112: DBCC    		in	a,(id_base+0xC)
0114: 3C      		inc	a
0115: C22501  		jp	nz,cycle
              		
              		; Print error and exit
0118: 0E09    		ld	c,b_print
011A: 111602  		ld	de,s_nosel
011D: CD0500  		call	bdos
0120: 0E00    		ld	c,b_exit
0122: CD0500  		call	bdos
              		
              		; Do a pass of the test
              		; Set upeer address registers
0125: AF      	cycle:	xor	a
0126: D3C8    		out	(id_base+0x8),a
0128: D3CA    		out	(id_base+0xA),a
              		
              		; First read of sector
012A: 3A0302  		ld	a,(block)
012D: D3C6    		out	(id_base+6),a
012F: 219202  		ld	hl,at0
0132: CDAB01  		call	id_rphy
              		
              		; Second read of sector
0135: 3A0302  		ld	a,(block)
0138: D3C6    		out	(id_base+6),a
013A: 219204  		ld	hl,at1
013D: CDAB01  		call	id_rphy
              		
              		; Compare
0140: 119202  		ld	de,at0
0143: 210002  	compare:ld	hl,512
0146: 19      		add	hl,de
0147: 1A      		ld	a,(de)
0148: 46      		ld	b,(hl)
0149: B8      		cp	b
014A: CA8C01  		jp	z,next
              		
              		; Does not equal!
014D: EB      		ex	de,hl
014E: 220402  		ld	(tsaddr),hl
0151: 119202  		ld	de,at0
0154: B7      		or	a
0155: ED52    		sbc	hl,de
0157: CDEC01  		call	tohex
015A: ED533A02		ld	(parm0),de
015E: 78      		ld	a,b
015F: CDEC01  		call	tohex
0162: ED534202		ld	(parm1),de
0166: 7C      		ld	a,h
0167: CDEC01  		call	tohex
016A: ED535202		ld	(parm3),de
016E: 7D      		ld	a,l
016F: CDEC01  		call	tohex
0172: ED535402		ld	(parm3+2),de
0176: 3A0302  		ld	a,(block)
0179: CDEC01  		call	tohex
017C: ED534A02		ld	(parm2),de
              		
              		; Print it
0180: 0E09    		ld	c,b_print
0182: 113002  		ld	de,s_alert
0185: CD0500  		call	bdos
              		
              		; Restore context and continue onto next
0188: ED5B0402		ld	de,(tsaddr)
              		
              		; Move on to the next value
018C: 13      	next:	inc	de
018D: 219204  		ld	hl,at1
0190: B7      		or	a
0191: ED52    		sbc	hl,de
0193: C24301  		jp	nz,compare
              		
              		; Next block
0196: 3A0302  		ld	a,(block)
0199: 3C      		inc	a
019A: 320302  		ld	(block),a
019D: C22501  		jp	nz,cycle
              		
              		; Pass
01A0: 0E09    		ld	c,b_print
01A2: 110602  		ld	de,s_pass
01A5: CD0500  		call	bdos
              		
              		; Restart test
01A8: C32501  		jp	cycle
              	
              	; Executes a read command
              	; HL = Destination of data
              	;
              	; Returns HL += 512
              	; uses: AF, BC, D, HL
01AB: 3E01    	id_rphy:ld	a,1
01AD: D3C4    		out	(id_base+0x04),a
01AF: CDDA01  		call	id_busy
01B2: 3E20    		ld	a,0x20
01B4: CDD201  		call	id_comm
01B7: CDCB01  		call	id_wdrq
01BA: 1600    		ld	d,0
01BC: 0EC0    		ld	c,id_base
01BE: EDA2    	id_rph0:ini
01C0: 0C      		inc	c
01C1: EDA2    		ini
01C3: 0D      		dec	c
01C4: 15      		dec	d
01C5: 20F7    		jr	nz,id_rph0
01C7: CDDA01  		call	id_busy
01CA: C9      		ret
              	
              	; Waits for a DRQ (Data Request)
              	;
              	; uses: AF
01CB: DBCE    	id_wdrq:in	a,(id_base+0xE)
01CD: CB5F    		bit	3,a
01CF: 28FA    		jr	z,id_wdrq
01D1: C9      		ret
              		
              	; Issues an IDE command
              	; A = Command to issue
              	;
              	; uses: AF
01D2: F5      	id_comm:push	af
01D3: CDDA01  		call	id_busy
01D6: F1      		pop	af
01D7: D3CE    		out	(id_base+0xE),a
01D9: C9      		ret
              		
              		
              	; Waits for the IDE drive to no longer be busy
              	;
              	; Resets flag z on error
01DA: DBCE    	id_busy:in	a,(id_base+0xE)
01DC: CB77    		bit	6,a
01DE: 28FA    		jr	z,id_busy
01E0: CB7F    		bit	7,a
01E2: 20F6    		jr	nz,id_busy
01E4: CB47    		bit	0,a
01E6: C9      		ret
              	
              	
              	; Waits a little bit
              	;
              	; uses: B
01E7: C5      	id_stal:push	bc
01E8: C1      		pop	bc
01E9: 10FC    		djnz	id_stal
01EB: C9      		ret
              	
              		; Converts the value into an 8 bit hex number
              		; A = Number to convert
              		;
              		; Returns DE = result
              		; uses: DE
01EC: 57      	tohex:	ld	d,a
01ED: CDF701  		call	0$
01F0: 5F      		ld	e,a
01F1: 7A      		ld	a,d
01F2: CDFB01  		call	1$
01F5: 57      		ld	d,a
01F6: C9      		ret
              		
01F7: 1F      	0$:	rra
01F8: 1F      		rra
01F9: 1F      		rra
01FA: 1F      		rra
01FB: F6F0    	1$:	or	0xF0
01FD: 27      		daa
01FE: C6A0    		add	a,0xA0
0200: CE40    		adc	a,0x40
0202: C9      		ret
              		
              		
              	; Variables
0203:         	block:
0203: 00      		defb	0
              		
0204:         	tsaddr:
0204: 0000    		defb	0,0
              	
              	
              	; Strings
              	
0206:         	s_pass:
0206: 50415353		defb	"PASS COMPLETE",0x0A,0x0D,'$'
020A: 20434F4D	
020E: 504C4554	
0212: 450A0D24	
              		
0216:         	s_nosel:
0216: 43414E4E		defb	"CANNOT SELECT IDE DRIVE",0x0A,0x0D,'$'
021A: 4F542053	
021E: 454C4543	
0222: 54204944	
0226: 45204452	
022A: 4956450A	
022E: 0D24    	
              		
0230:         	s_alert:
0230: 4641494C		defb	'FAIL: AT1 '
0234: 3A204154	
0238: 3120    	
023A: 5858    	parm0:	defb	'XX'
023C: 2C204154		defb	', AT2 '
0240: 3220    	
0242: 5858    	parm1:	defb	'XX'
0244: 2C20424C		defb	', BLK '
0248: 4B20    	
024A: 5858    	parm2:	defb	'XX'
024C: 2C204144		defb	', ADR '
0250: 5220    	
0252: 58585858	parm3:	defb	'XXXX'
0256: 0A0D24  		defb	0x0A,0x0D,'$'
              		
0259:         	splash:
0259: 49444520		defb	'IDE Interface Integrity Test',0x0A,0x0D
025D: 496E7465	
0261: 72666163	
0265: 6520496E	
0269: 74656772	
026D: 69747920	
0271: 54657374	
0275: 0A0D    	
0277: 52657620		defb	'Rev 1a, tergav17 (Gavin)',0x0A,0x0D,'$' 
027B: 31612C20	
027F: 74657267	
0283: 61763137	
0287: 20284761	
028B: 76696E29	
028F: 0A0D24  	
              		
              		
              	; Heap
0292:         	heap:
0292: 00      		defb	0
              		
0292:         	at0	equ	heap
0492:         	at1	equ	heap+512


; +++ segments +++

#CODE          = $0100 =   256,  size = $0193 =   403

; +++ global symbols +++

_end    = $0293 =   659          IDEINTEG.asm:24 (unused)
_size   = $0193 =   403          IDEINTEG.asm:24 (unused)
at0     = $0292 =   658          IDEINTEG.asm:246
at1     = $0492 =  1170          IDEINTEG.asm:247
b_coin  = $0001 =     1          IDEINTEG.asm:17 (unused)
b_cout  = $0002 =     2          IDEINTEG.asm:18 (unused)
b_exit  = $0000 =     0          IDEINTEG.asm:16
b_print = $0009 =     9          IDEINTEG.asm:19
bdos    = $0005 =     5          IDEINTEG.asm:14
block   = $0203 =   515          IDEINTEG.asm:211
compare = $0143 =   323          IDEINTEG.asm:68
cycle   = $0125 =   293          IDEINTEG.asm:50
heap    = $0292 =   658          IDEINTEG.asm:243
id_base = $00C0 =   192          IDEINTEG.asm:21
id_busy = $01DA =   474          IDEINTEG.asm:169
id_comm = $01D2 =   466          IDEINTEG.asm:159
id_rph0 = $01BE =   446          IDEINTEG.asm:138
id_rphy = $01AB =   427          IDEINTEG.asm:130
id_stal = $01E7 =   487          IDEINTEG.asm:181
id_wdrq = $01CB =   459          IDEINTEG.asm:150
next    = $018C =   396          IDEINTEG.asm:105
parm0   = $023A =   570          IDEINTEG.asm:228
parm1   = $0242 =   578          IDEINTEG.asm:230
parm2   = $024A =   586          IDEINTEG.asm:232
parm3   = $0252 =   594          IDEINTEG.asm:234
s_alert = $0230 =   560          IDEINTEG.asm:226
s_nosel = $0216 =   534          IDEINTEG.asm:223
s_pass  = $0206 =   518          IDEINTEG.asm:220
splash  = $0259 =   601          IDEINTEG.asm:237
start   = $0100 =   256          IDEINTEG.asm:27 (unused)
tohex   = $01EC =   492          IDEINTEG.asm:191
tsaddr  = $0204 =   516          IDEINTEG.asm:214


total time: 0.0138 sec.
no errors
