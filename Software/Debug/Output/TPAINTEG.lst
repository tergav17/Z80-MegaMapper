              	; --------------------------------------
              	; zasm: assemble "TPAINTEG.asm"
              	; date: 2024-08-16 00:03:10
              	; --------------------------------------


              	;
              	;**************************************************************
              	;*
              	;*      T P A   M E M O R Y   I N T E G R I T Y   T E S T
              	;*
              	;*      Checks the integrity of memory within the TPA. The
              	;*      purpose of this program is to look for certain addresses
              	;*      that may be "flakey" for some reason or another
              	;*
              	;*      Program will continue to run until machine is reset
              	;* 
              	;**************************************************************
              	
              	; Equates
0005:         	bdos	equ	0x0005
              	
0000:         	b_exit	equ	0x00
0001:         	b_coin	equ	0x01
0002:         	b_cout	equ	0x02
0009:         	b_print	equ	0x09
              	
              	; Program start
0100:         		org	0x0100
              		
              		; Print "hello" splash
0100: F3      	start:	di
0101: 0E09    		ld	c,b_print
0103: 11E101  		ld	de,splash
0106: CD0500  		call	bdos
              		
              		; Execute a cycle of the test
0109: 211702  	cycle:	ld	hl,heap
010C: 3AA401  		ld	a,(phase)
010F: 4F      		ld	c,a
              		
0110: 71      	wrloop:	ld	(hl),c
0111: 23      		inc	hl
0112: 0C      		inc	c
0113: B7      		or	a
0114: ED72    		sbc	hl,sp
0116: 7C      		ld	a,h
0117: B5      		or	l
0118: CA1F01  		jp	z,wrdone
011B: 39      		add	hl,sp
011C: C31001  		jp	wrloop
              		
              	
              		; Prepare to read back all values
011F: 211702  	wrdone:	ld	hl,heap
0122: 3AA401  		ld	a,(phase)
0125: 4F      		ld	c,a
              		
              		; Read and test a value from memory
              		; We will do this multiple times in a row
0126: 0620    	rdloop:	ld	b,32
0128: 7E      	0$:	ld	a,(hl)
0129: B9      		cp	c
012A: C24D01  		jp	nz,memerr
012D: 10F9    		djnz	0$
              		
              		; Do next memory cell
012F: 23      	next:	inc	hl
0130: 0C      		inc	c
0131: B7      		or	a
0132: ED72    		sbc	hl,sp
0134: 7C      		ld	a,h
0135: 3C      		inc	a
0136: B5      		or	l
0137: CA3E01  		jp	z,pass
013A: 39      		add	hl,sp
013B: C32601  		jp	rdloop
              		
              		; Print pass message
013E: 0E09    	pass:	ld	c,b_print
0140: 11A901  		ld	de,s_pass
0143: CD0500  		call	bdos
              		
              		; Increment phase and retry
0146: 21A401  		ld	hl,phase
0149: 34      		inc	(hl)
014A: C30901  		jp	cycle
              		
              		; Something went wrong, report it!
014D: ED43A501	memerr:	ld	(tsvalue),bc
0151: 22A701  		ld	(tsaddr),hl 
              		
              		; Fill out parameters
0154: CD8D01  		call	tohex
0157: ED53CA01		ld	(parm1),de
015B: 79      		ld	a,c
015C: CD8D01  		call	tohex
015F: ED53C301		ld	(parm0),de
0163: 78      		ld	a,b
0164: CD8D01  		call	tohex
0167: ED53D201		ld	(parm2),de
016B: 7C      		ld	a,h
016C: CD8D01  		call	tohex
016F: ED53DA01		ld	(parm3),de
0173: 7D      		ld	a,l
0174: CD8D01  		call	tohex
0177: ED53DC01		ld	(parm3+2),de
              		
              		; Print it
017B: 0E09    		ld	c,b_print
017D: 11B901  		ld	de,s_alert
0180: CD0500  		call	bdos
              		
              		; Restore context and continue onto next
0183: ED4BA501		ld	bc,(tsvalue)
0187: 2AA701  		ld	hl,(tsaddr)
018A: C32F01  		jp	next
              	
              		; Converts the value into an 8 bit hex number
              		; A = number to convert
              		; DE = result
              		; uses: DE
018D: 57      	tohex:	ld	d,a
018E: CD9801  		call	0$
0191: 5F      		ld	e,a
0192: 7A      		ld	a,d
0193: CD9C01  		call	1$
0196: 57      		ld	d,a
0197: C9      		ret
              		
0198: 1F      	0$:	rra
0199: 1F      		rra
019A: 1F      		rra
019B: 1F      		rra
019C: F6F0    	1$:	or	0xF0
019E: 27      		daa
019F: C6A0    		add	a,0xA0
01A1: CE40    		adc	a,0x40
01A3: C9      		ret
              		
              	; Variables
01A4:         	phase:
01A4: 00      		defb	0
              	
01A5:         	tsvalue:
01A5: 0000    		defb	0,0
              		
01A7:         	tsaddr:
01A7: 0000    		defb	0,0
              	
              	
              	; Strings
              	
01A9:         	s_pass:
01A9: 50415353		defb	"PASS COMPLETE",0x0A,0x0D,'$'
01AD: 20434F4D	
01B1: 504C4554	
01B5: 450A0D24	
              		
01B9:         	s_alert:
01B9: 4641494C		defb	'FAIL: EXP '
01BD: 3A204558	
01C1: 5020    	
01C3: 5858    	parm0:	defb	'XX'
01C5: 2C205244		defb	', RD '
01C9: 20      	
01CA: 5858    	parm1:	defb	'XX'
01CC: 2C205452		defb	', TRY '
01D0: 5920    	
01D2: 5858    	parm2:	defb	'XX'
01D4: 2C204144		defb	', ADR '
01D8: 5220    	
01DA: 58585858	parm3:	defb	'XXXX'
01DE: 0A0D24  		defb	0x0A,0x0D,'$'
              		
01E1:         	splash:
01E1: 54504120		defb	'TPA Memory Integrity Test',0x0A,0x0D
01E5: 4D656D6F	
01E9: 72792049	
01ED: 6E746567	
01F1: 72697479	
01F5: 20546573	
01F9: 740A0D  	
01FC: 52657620		defb	'Rev 1a, tergav17 (Gavin)',0x0A,0x0D,'$' 
0200: 31612C20	
0204: 74657267	
0208: 61763137	
020C: 20284761	
0210: 76696E29	
0214: 0A0D24  	
              		
              		
              	; Heap
0217:         	heap:
0217: 00      		defb	0


; +++ segments +++

#CODE          = $0100 =   256,  size = $0118 =   280

; +++ global symbols +++

_end     = $0218 =   536          TPAINTEG.asm:23 (unused)
_size    = $0118 =   280          TPAINTEG.asm:23 (unused)
b_coin   = $0001 =     1          TPAINTEG.asm:18 (unused)
b_cout   = $0002 =     2          TPAINTEG.asm:19 (unused)
b_exit   = $0000 =     0          TPAINTEG.asm:17 (unused)
b_print  = $0009 =     9          TPAINTEG.asm:20
bdos     = $0005 =     5          TPAINTEG.asm:15
cycle    = $0109 =   265          TPAINTEG.asm:32
heap     = $0217 =   535          TPAINTEG.asm:168
memerr   = $014D =   333          TPAINTEG.asm:84
next     = $012F =   303          TPAINTEG.asm:62
parm0    = $01C3 =   451          TPAINTEG.asm:153
parm1    = $01CA =   458          TPAINTEG.asm:155
parm2    = $01D2 =   466          TPAINTEG.asm:157
parm3    = $01DA =   474          TPAINTEG.asm:159
pass     = $013E =   318          TPAINTEG.asm:74
phase    = $01A4 =   420          TPAINTEG.asm:136
rdloop   = $0126 =   294          TPAINTEG.asm:55
s_alert  = $01B9 =   441          TPAINTEG.asm:151
s_pass   = $01A9 =   425          TPAINTEG.asm:148
splash   = $01E1 =   481          TPAINTEG.asm:162
start    = $0100 =   256          TPAINTEG.asm:26 (unused)
tohex    = $018D =   397          TPAINTEG.asm:117
tsaddr   = $01A7 =   423          TPAINTEG.asm:142
tsvalue  = $01A5 =   421          TPAINTEG.asm:139
wrdone   = $011F =   287          TPAINTEG.asm:49
wrloop   = $0110 =   272          TPAINTEG.asm:36


total time: 0.0076 sec.
no errors
